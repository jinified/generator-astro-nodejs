{
  "name": "<%= name %>",
  "version": "<%= version %>",
  "description": "<%= description %>",
  "author": "<%= author %>",
  "main": "<%= src %>/index.js",
  "private": false,
  "license": "<%= license %>",
  "engines": {
    "node": ">=8",
    "yarn": "*"
  },
  "scripts": {
    "precommit": "yarn validate",
    "prestart": "yarn docs",
    "start": "cross-env NODE_ENV=production pm2 start ./<%= src %>/index.js",
    "dev": "NODE_ENV=development nodemon ./<%= src %>/index.js",
    "lint": "eslint '**/*.js' --ignore-path .gitignore --ignore-pattern internals/scripts",
    "lint:fix": "yarn lint -- --fix",
    "test": "cross-env NODE_ENV=test jest --forceExit --detectOpenHandles --coverage --coverageDirectory=coverage",
    "test:unit": "cross-env NODE_ENV=test jest --verbose false --forceExit --detectOpenHandles --testPathPattern=\"(/src/.*)\\.(spec).js$\"",
    "test:integration": "cross-env NODE_ENV=test jest --verbose false --forceExit --detectOpenHandles --testPathPattern=\"(/src/.*)\\.(test).js$\"",<% } %>
    "validate": "yarn lint && yarn test",
    "postpublish": "git push --tags",
    "docs": "apidoc -i src -o docs",
    "swagger:dev": "cross-env NODE_ENV=development joi-swagger-generator -r -v ./src/ -h ./swagger/header.json -o ./swagger/swagger.json -b https://api-sfv-dev.eco.astro.com.my -g /sfv",
    "swagger:stg": "cross-env NODE_ENV=staging joi-swagger-generator -r -v ./src/ -h ./swagger/header.json -o ./swagger/swagger.json -b https://api-sfv-stg.eco.astro.com.my -g /sfv",
    "swagger:prd": "cross-env NODE_ENV=production joi-swagger-generator -r -v ./src/ -h ./swagger/header.json -o ./swagger/swagger.json -b https://api-sfv.eco.astro.com.my -g /sfv",
    "docker:start": "cross-env NODE_ENV=production pm2-docker start ./<%= src %>/index.js",
    "docker:prod": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml up",
    "docker:dev": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up",
    "docker:test": "docker-compose -f docker-compose.yml -f docker-compose.test.yml up --abort-on-container-exit"<% if (sequelize === 'y') { %>,
    "db:migrate": "sequelize db:migrate",
    "db:migrate:undo": "sequelize db:migrate:undo",
    "db:migrate:reset": "sequelize db:migrate:undo:all && sequelize db:migrate",
    "db:seed": "sequelize db:seed:all",
    "db:seed:undo": "sequelize db:seed:undo:all",
    "db:seed:reset": "sequelize db:seed:undo:all && sequelize db:seed:all"<% } %>
  },
  "keywords": [
    "express",
    "node",
    "node.js",
    "passport",
    "es6",
    "es7",
    "es8",
    "es2017",
    "jest",
    "eslint",
    "REST",
    "API",
    "boilerplate",
    "generator",
    "starter project",
    "aws"
  ],
  "dependencies": {
    "@astro-my/aim-sdk": "^1.0.5",
    "@elastic/elasticsearch": "^7.1.0",
    "async": "^2.6.1",
    "aws-sdk": "^2.253.1",
    "axios": "^0.18.0",
    "axios-retry": "^3.1.1",
    "bcryptjs": "2.4.3",
    "bluebird": "^3.5.0",
    "body-parser": "^1.17.0",
    "celebrate": "^9.0.1",
    "compression": "^1.6.2",
    "cors": "^2.8.3",
    "cross-env": "^5.0.1",
    "dotenv-safe": "^5.0.1",
    "elastic-apm-node": "^2.12.0",
    "es-class": "^2.1.1",
    "express": "^4.15.2",
    "express-interceptor": "^1.2.0",
    "express-validation": "^1.0.2",
    "helmet": "^3.5.0",
    "http-status": "^1.0.1",
    "joi": "^14.3.1",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.4",
    "method-override": "^2.3.8",
    "module-alias": "^2.0.6",
    "moment": "^2.24.0",
    "moment-timezone": "^0.5.13",
    "node-sanitizer": "^1.0.3",
    "passport": "^0.4.0",
    "passport-http-bearer": "^1.0.1",
    "passport-jwt": "4.0.0",
    "path-match": "^1.2.4",
    "pm2": "^2.4.6",
    "query-string": "^6.8.1",
    "response-time": "^2.3.2",
    "universal-cookie-express": "^3.0.7",
    "uuid": "^3.1.0",
    "winston": "^3.1.0",
    "winston-cloudwatch": "^2.0.2"
  },
  "devDependencies": {
    "@astro-my/joi-swagger-generator": "^2.0.0",
    "@types/jest": "^23.3.3",
    "apidoc": "^0.17.6",
    "eslint": "^5.6.1",
    "eslint-config-astro": "^1.0.6",
    "eslint-import-resolver-module-alias": "^0.1.0",
    "eslint-plugin-import": "^2.14.0",
    "husky": "^0.14.3",
    "jest": "^24.1.0",
    "jest-dom": "^3.0.1",
    "jest-express": "^1.8.0",
    "jest-extended": "^0.11.1",
    "jest-tobetype": "^1.2.0",
    "mock-express-request": "^0.2.2",
    "mock-express-response": "^0.2.2",
    "nodemon": "^1.11.0",
    "prettier-eslint": "^8.8.2",
    "supertest": "^3.0.0"
  },
  "_moduleAliases": {
    "@app"          : "<%= root %>",
    "@config"       : "<%= src %>/config",
    "@api"          : "<%= src %>/api",
    "@middlewares"  : "<%= src %>/middlewares",
    "@models"       : "<%= src %>/models",
    "@services"     : "<%= src %>/services",
    "@utils"        : "<%= src %>/utils"
  "nyc": {
    "include": "src",
    "exclude": [
      "**/*.spec.js",
      "**/*.test.js",
      "**/index.js"
    ]
  },
  "jest": {
    "moduleNameMapper": {
      "^@app(.*)$": "<rootDir>/<%= root %>$1",
      "^@boot(.*)$": "<rootDir>/<%= src %>/boot$1",
      "^@config(.*)$": "<rootDir>/<%= src %>/config$1",
      "^@api(.*)$": "<rootDir>/<%= src %>/api$1",
      "^@middlewares(.*)$": "<rootDir>/<%= src %>/middlewares$1",
      "^@models(.*)$": "<rootDir>/<%= src %>/models$1",
      "^@services(.*)$": "<rootDir>/<%= src %>/services$1",
      "^@utils(.*)$": "<rootDir>/<%= src %>/utils$1"
    },
    "testRegex": "(/src/.*)\\.(test|spec).js$",
    "testPathIgnorePatterns": [
      "\\index.js$",
      "(/src/.*)\\.(validator|validation|config|index).js$"
    ],<% } else { %>
    "setupFiles": [
      "<rootDir>/test.setup.js"
    ],<% } %>
    "moduleFileExtensions": [
      "js", "jsx"
    ],
    "collectCoverageFrom": [
      "src/**/*{js,jsx}",
      "!src/**/index.js",
      "!src/**/*.validation.js",
      "!src/**/*.validator.js",
      "!<%= src %>/config/**",
      "!<%= src %>/database/**",
      "!<%= src %>/models/**",
      "!<%= src %>/services/http/**",
      "!<rootDir>/node_modules/"
    ],
    "coverageReporters": [
      "json",
      "html",
      "lcov",
      "text",
      "clover"
    ],
    "setupFilesAfterEnv": [
      "jest-extended"
    ]
  }
}
